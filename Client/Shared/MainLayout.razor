@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthProvider

<TelerikRootComponent>
    <div class="main">
        <div class="top-row px-4 auth">
            <TelerikButton OnClick="@ToggleDrawer" Icon="@IconName.Menu"></TelerikButton>
            <div class="login-items">
                <LoginDisplay />
            </div>
        </div>
        <TelerikDrawer @ref="@Drawer" Data="Data" Mode="DrawerMode.Push">
            <Content>
                <div class="content px-4">
                    @Body
                </div>
            </Content>
        </TelerikDrawer>
    </div>

    <AuthorizeView>
        <Authorized>
            @{IsUserAuthenticated = true;}
        </Authorized>
        <NotAuthorized>
            @{IsUserAuthenticated = false;}
        </NotAuthorized>
    </AuthorizeView>
</TelerikRootComponent>

@code {
    public TelerikDrawer<DrawerItem> Drawer { get; set; }
    public bool IsUserAuthenticated { get; set; } = false;
    public List<DrawerItem> Data { get; set; } = new List<DrawerItem> { new DrawerItem { Text = "Home", Icon = "home", Url = "/" } };

    public async Task ToggleDrawer() => await Drawer.ToggleAsync();

    public class DrawerItem
    {
        public string Text { get; set; }

        public string Icon { get; set; }

        public bool IsSeparator { get; set; }

        public string Url { get; set; }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Data = new List<DrawerItem> { new DrawerItem { Text = "Home", Icon = "home", Url = "/" } };

        //if (IsUserAuthenticated)
        //{
        //    Data.Add(new DrawerItem { Text = "MyDay", Icon = IconName.CalendarDate, Url = "my-day" });
        //    Data.Add(new DrawerItem { Text = "Log", Icon = IconName.ListUnordered, Url = "log" });
        //}

        Data = new List<DrawerItem> { new DrawerItem { Text = "Home", Icon = "home", Url = "/" } };

        var authState = await AuthProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            Data.Add(new DrawerItem { Text = "MyDay", Icon = IconName.CalendarDate, Url = "my-day" });
            Data.Add(new DrawerItem { Text = "Log", Icon = IconName.ListUnordered, Url = "log" });
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
